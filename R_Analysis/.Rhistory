playgrounds<-read.csv('playgrounds.csv',header=TRUE)
setwd("~")
library(rgdal)
library(sp)
library(rgeos)
library(ggplot2)
playgrounds<-read.csv('playgrounds.csv',header=TRUE)
playgrounds<-playgrounds[!is.na(playgrounds$lon) & !is.na(playgrounds$lat),]
coordinates(playgrounds)<-c("lon","lat")
WGS_84<-CRS("+init=epsg:4326")
proj4string(playgrounds)=WGS_84
UTM_18N<-CRS("+init=epsg:26918")
AADT_2012<-readOGR('AADT_2012.shp',layer='AADT_2012')
playgrounds_26918<-spTransform(playgrounds, UTM_18N)
aadt100k<-subset(AADT_2012, AADT>100000)
aadt100k_dataframe<-fortify(aadt100k, region="id")
AADT_2012@data$id <- rownames(AADT_2012@data)
aadt100k_dataframe<-merge(aadt100k_dataframe, AADT_2012@data, by="id")
p_aadtv<-ggplot(aadt100k_dataframe,aes(x=AADT))
names(aadt100k_dataframe)
p_aadtv+geom_histogram()
aadtbuffer<-gBuffer(aadt100k, byid=FALSE, width=50)
UTM_18N<-CRS("+init=epsg:26918")
aadtbuffer<-spTransform(aadtbuffer, UTM_18N)
hightrafficplay<-gIntersection(playgrounds_26918, aadtbuffer)
hightrafficplay_dataframe<-fortify(hightrafficplay, region="id")
setwd("~")
plgrnd<- read.csv("playgrounds.csv", header = TRUE)
play <- na.omit(plgrnd)
coordinates(play)<-c("lat", "lon")
install.packages("spatstat")
install.packages("spatstat")
install.packages("spatstat")
library(spatstat)
beginner
help(spatstat)
demo(spatstat)
vignette('shapefiles')
library(maptools)
install.packages("maptools")
library(maptools)
gpclibPermit()
install.packages("rgeos")
library(maptools)
library(rgeos)
detach("package:maptools", unload=TRUE)
library("maptools", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
setwd("~/Downloads/Analysis")
source('~/Downloads/Analysis/stats.R', echo=TRUE)
source('~/Downloads/Analysis/stats.R', echo=TRUE)
germany <- readShapeSpatial("DE_proj.shp")
ger <- as.owin(germany)
type(owin)
class(ger)
setwd("~/Downloads/Analysis")
declared <- readShapeSpatial("Declared_proj.shp")
extracted <- readShapeSpatial("Extracted_proj.shp")
germany <- readShapeSpatial("DE_proj.shp")
germany <- as.owin(germany)
class(ger)
declared <- declared[germany]
ger
germany
declared <- as.ppp(declared, germany)
declared <- readShapeSpatial("Declared_proj.shp")
declared <- as.ppp(declared, W=germany)
declared <- readShapeSpatial("Declared_proj.shp")
declared.ppp <- ppp(declared.points[,1], declared.points[,2], W=germany)
declared.ppp <- ppp(declared.coords[,1], declared.coords[,2], W=germany)
print declared
delcared
declared <- readShapeSpatial("Declared_proj.shp")
delcared
class(declared)
library(spatstat)
library(rgeos)
library(maptools)
setwd("~/Downloads/Analysis")
# load data
declared <- readShapeSpatial("Declared_proj.shp")
extracted <- readShapeSpatial("Extracted_proj.shp")
germany <- readShapeSpatial("DE_proj.shp")
germany <- as.owin(germany)
class(ger)
library(spatstat)
library(rgeos)
library(maptools)
setwd("~/Downloads/Analysis")
# load data
declared <- readShapeSpatial("Declared_proj.shp")
extracted <- readShapeSpatial("Extracted_proj.shp")
germany <- readShapeSpatial("DE_proj.shp")
#change germany polygon to owin type, so that we can use it as the boundary for our point pattern analysis
germany.window <- as.owin(germany)
class(germany.window)
declared
declared.ppp <- ppp(declared.coordinates[,1], declared.coordinates[,2], W=germany)
declared.ppp <- ppp(declared.coords[,1], declared.coords[,2], W=germany)
declared.ppp <- ppp(declared@coords[,1], declared@coords[,2], W=germany)
library(spatstat)
library(rgeos)
library(maptools)
setwd("~/Downloads/Analysis")
# load data
declared  <- readShapeSpatial("Declared_proj.shp")
extracted <- readShapeSpatial("Extracted_proj.shp")
germany   <- readShapeSpatial("DE_proj.shp")
#change germany polygon to owin type, so that we can use it as the boundary for our point pattern analysis
germany.window <- as.owin(germany)
class(germany.window)
# change the point layers to spatstat point patterns and set the window to the border of germany
declared.ppp  <- ppp(declared@coords[,1],  declared@coords[,2],  W=germany)
extracted.ppp <- ppp(extracted@coords[,1], extracted@coords[,2], W=germany)
help(spatstat)
vignette('getstart')
class(declared.ppp)
class(extracted.ppp)
summary(declared.ppp)
summary(extracted.ppp)
plot.ppp(declared.ppp)
plot.ppp(extracted.ppp)
library(spatstat)
library(rgeos)
library(maptools)
setwd("~/Downloads/Analysis")
# load data
declared  <- readShapeSpatial("Declared_proj.shp")
extracted <- readShapeSpatial("Extracted_proj.shp")
germany   <- readShapeSpatial("DE_proj.shp")
#change germany polygon to owin type, so that we can use it as the boundary for our point pattern analysis
germany.window <- as.owin(germany)
class(germany.window)
# change the point layers to spatstat point patterns and set the window to the border of germany
declared.ppp  <- ppp(declared@coords[,1],  declared@coords[,2],  W=germany.window)
extracted.ppp <- ppp(extracted@coords[,1], extracted@coords[,2], W=germany.window)
# extracted <- extracted[germany]
class(declared.ppp)
class(extracted.ppp)
summary(declared.ppp)
summary(extracted.ppp)
declared.ppp  <- ppp(declared@coords[,1],  declared@coords[,2],  W=germany.window)
extracted.ppp <- ppp(extracted@coords[,1], extracted@coords[,2], W=germany.window)
class(declared.ppp)
class(extracted.ppp)
summary(declared.ppp)
summary(extracted.ppp)
declared  <- readShapeSpatial("Declared_proj.shp")
extracted <- readShapeSpatial("Extracted_proj.shp")
germany   <- readShapeSpatial("DE_proj.shp")
germany.window <- as.owin(germany)
class(germany.window)
declared.ppp  <- ppp(declared@coords[,1],  declared@coords[,2],  W=germany.window)
extracted.ppp <- ppp(extracted@coords[,1], extracted@coords[,2], W=germany.window)
class(declared.ppp)
class(extracted.ppp)
summary(declared.ppp)
declared@proj4string
library(rgdal)
install.packages('rgdal')
library(rgdal)
library(spatstat)
library(rgdal)
setwd("~/Downloads/Analysis")
declared <- readOGR(".","Declared_proj.shp")
declared <- readOGR("~/Downloads/Analysis","Declared_proj.shp")
declared <- readOGR("~/Downloads/Analysis","Declared_proj")
declared <- readOGR(".","Declared_proj")
class(declared)
.","Declared_proj")
extracted <- readOGR(".","Extracted_proj")
germany   <- readOGR(".","DE_proj")
declared  <- readOGR(".","Declared_proj")
germany.window <- as.owin(germany)
class(germany.window)
declared.ppp  <- ppp(declared@coords[,1],  declared@coords[,2],  W=germany.window)
extracted.ppp <- ppp(extracted@coords[,1], extracted@coords[,2], W=germany.window)
class(declared.ppp)
class(extracted.ppp)
summary(declared.ppp)
declared.ppp  <- ppp(declared@coords[,1],  declared@coords[,2])
class(declared.ppp)
summary(declared.ppp)
vignette('shapefiles')
extracted.ppp <- as.ppp(extracted@coords[,1], extracted@coords[,2], W=germany.window)
extracted.ppp <- as.ppp(coordinates(extracted), germany.window)
summary(extracted.ppp)
setwd("~/Downloads/Analysis")
declared  <- readOGR(".","Declared_proj")
extracted <- readOGR(".","Extracted_proj")
germany   <- readOGR(".","DE_proj")
germany.window <- as.owin(germany)
class(germany.window)
declared.ppp  <- as.ppp(coordinates(declared),  germany.window)
extracted.ppp <- as.ppp(coordinates(extracted), germany.window)
class(declared.ppp)
class(extracted.ppp)
summary(declared.ppp)
summary(extracted.ppp)
plot.ppp(declared.ppp)
plot.ppp(extracted.ppp)
extracted <- readOGR(".","Extracted_proj")
extracted.ppp <- as.ppp(coordinates(extracted), germany.window)
plot.ppp(extracted.ppp)
plot(Kest(mypattern))
plot(Kest(extracted.ppp))
plot(Kest(declared.ppp))
plot(envelope(extracted.ppp,Kest))
plot(envelope(declared.ppp,Kest))
help("spatstat")
demo(spatstat)
X <- runifpoint(15)
Y <- runifpoint(20)
N <- nncross(X,Y)$which
# note that length(N) = 15
plot(superimpose(X=X,Y=Y), main="nncross", cols=c("red","blue"))
arrows(X$x, X$y, Y[N]$x, Y[N]$y, length=0.15)
N <- nncross(declared.ppp,extracted.ppp)$which
plot(superimpose(declared.ppp=declared.ppp,extracted.ppp=extracted.ppp), main="nncross", cols=c("red","blue"))
arrows(extracted.ppp$x, extracted.ppp$y, extracted.ppp[N]$x, extracted.ppp[N]$y, length=0.15)
N <- nncross(declared.ppp,extracted.ppp)$which
plot(superimpose(declared.ppp=declared.ppp,extracted.ppp=extracted.ppp), main="nncross", cols=c("red","blue"))
arrows(extracted.ppp$x, extracted.ppp$y, declared.ppp[N]$x, declared.ppp[N]$y, length=0.15)
library(spatstat)
library(rgdal)
library(maptools)
setwd("~/Dropbox/Code/CentralPlaceWiki/R_Analysis")
# load data
declared  <- readOGR("Shapefiles","Declared_proj")
extracted <- readOGR("Shapefiles","Extracted_proj")
#germany <- readShapePoly('de_states.shp', proj4string=CRS("+proj=utm +zone=32 +ellps=GRS80 +units=m +no_defs"))
germany <- readOGR("Shapefiles", "de-states")
#change germany polygon to owin type, so that we can use it as the boundary for our point pattern analysis
germany.window <- as.owin(germany)
class(germany.window)
declared.ppp  <- as.ppp(coordinates(declared),  germany.window)
extracted.ppp <- as.ppp(coordinates(extracted), germany.window)
nn <- nncross(declared.ppp,extracted.ppp)
neighbors = nn$which # indicies of nearest neighbors
distances = nn$dist  # distances
distances
distances[4]
neighbors[4]
plot(superimpose(declared.ppp[4]=declared.ppp[4],extracted.ppp[740]=extracted.ppp[740]), main="nncross", cols=c("red","blue"))
declared.ppp[4]
extracted.ppp[740]
i = distances > 0
declared_unique = declared[i,]
declared_unique.ppp  <- as.ppp(coordinates(declared_unique),  germany.window)
plot(declared_unique.ppp)
nonneighbors = neighbors[i,]
nonneighbors = neighbors[i]
extracted_unique = extracted[neighbors,]
extracted_unique = extracted[nonneighbors,]
extracted_unique.ppp <-as.ppp(coordinates(extracted_unique), germany.window)
plot(extracted_unique.ppp)
plot(superimpose(declared_unique.ppp=declared_unique.ppp,extracted_unique.ppp=extracted_unique.ppp), main="nncross", cols=c("red","blue"))
plot(superimpose(declared_unique.ppp=declared_unique.ppp,extracted_unique.ppp=extracted_unique.ppp), main="uniques", cols=c("red","blue"))
k_ex_u <- Kest(extracted_unique.ppp)
k_ex_u
k_dec_u <- Kest(declared_unique.ppp)
k_dec_u
plot(k_ex_u)
plot(k_dec_u)
plot(germany)
plot(density.ppp(extracted.ppp, 0.05))
plot(density.ppp(extracted.ppp, 0.2))
plot(density.ppp(extracted.ppp, eps=1000, 0.2))
plot(density.ppp(extracted.ppp, eps=500000, 0.2))
plot(density.ppp(extracted.ppp, eps=100000, 0.2))
plot(density.ppp(extracted.ppp, eps=50000, 0.2))
plot(density.ppp(extracted.ppp, eps=25000, 0.2))
plot(density.ppp(declared.ppp, eps=25000, 0.2))
plot(desity.extracted)
desity.extracted <- density.ppp(extracted.ppp, eps=25000, 0.2)
plot(desity.extracted)
extracted.desity <- density.ppp(extracted.ppp, eps=25000, 0.2)
plot(extracted.desity)
declared.density <- density.ppp(declared.ppp, eps=25000, 0.2)
plot(declared.density)
diff.density <- declared.density - extracted.desity
plot(diff.density)
